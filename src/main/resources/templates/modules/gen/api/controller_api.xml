<?xml version="1.0" encoding="utf-8"?>
<template>
  <name>controller</name>
  <filePath>src/main/java/${packageName}/${moduleName}/api/web/${subModuleName}</filePath>
  <fileName>${ClassName}ApiController.java</fileName>
  <content><![CDATA[
/**
 * Copyright &copy; 2012-2016  All rights reserved.
 */
package ${packageName}.${moduleName}.api.web<#if subModuleName != "">.${subModuleName}</#if>;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestBody;
import java.util.List;

import com.create80.rd.common.utils.JsonUtils;
import com.github.pagehelper.PageInfo;

import ${packageName}.${moduleName}.api.model<#if subModuleName != "">.${subModuleName}</#if>.${ClassName};
import ${packageName}.${moduleName}.api.service<#if subModuleName != "">.${subModuleName}</#if>.${ClassName}Service;

/**
 * ${functionName}Controller
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Controller
@RequestMapping(value = "/${urlPrefix}/api")
public class ${ClassName}ApiController  {

	@Autowired
	private ${ClassName}Service ${className}Service;
	

	@RequestMapping(value = "list",method = RequestMethod.POST)
	@ResponseBody
	public String list(@RequestParam(required = false) Integer pageNum,
	        @RequestParam(required = false) Integer pageSize,
	        @RequestBody ${ClassName} ${className}) {

		if (pageNum == null) {
      pageNum = -1;
    }
    if (pageSize == null) {
      pageSize = -1;
    }
    PageInfo pageInfo = new PageInfo(${className}Service.findList(pageNum, pageSize, ${className}));
    return JsonUtils.toJson(pageInfo);
	}


	@RequestMapping(value = "getAll", method = RequestMethod.GET)
  @ResponseBody
  public List<${ClassName}> getAllList() {
    ${ClassName} ${className} = new ${ClassName}();
    ${className}.setIsDeleted("N");
    return ${className}Service.findList(-1, -1, ${className});
  }


  @RequestMapping(value = "{id}", method = RequestMethod.GET)
  @ResponseBody
  public ${ClassName} getById(@PathVariable("id") String ${className}Id) {

    return ${className}Service.get(${className}Id);
  }


	@RequestMapping(value = "save")
	@ResponseBody
	public boolean save(@RequestBody ${ClassName} ${className}) {
		${className}Service.save(${className});
		return true;
	}
	
	@RequestMapping(value = "delete")
	@ResponseBody
	public boolean delete(@RequestBody ${ClassName} ${className}) {
		${className}Service.delete(${className});
		return true;
	}

}]]>
  </content>
</template>